// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RentalBikeSystem.Context;
using System;

namespace RentalBikeSystem.Migrations
{
    [DbContext(typeof(BikeContext))]
    [Migration("20180220174012_m")]
    partial class m
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentalBikeSystem.Model.Bike", b =>
                {
                    b.Property<int>("BikeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Category");

                    b.Property<DateTime?>("DateOfLastService");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000);

                    b.Property<double>("PriceAdditionalHour");

                    b.Property<double>("PriceFirstHour");

                    b.Property<DateTime>("PurchaseDate");

                    b.HasKey("BikeId");

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("RentalBikeSystem.Model.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Gender");

                    b.Property<int?>("Housenumber")
                        .HasMaxLength(10);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<int>("ZipCode")
                        .HasMaxLength(10);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RentalBikeSystem.Model.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BikeId");

                    b.Property<int?>("CustomerId");

                    b.Property<bool>("Paid");

                    b.Property<DateTime>("RentalBegin");

                    b.Property<DateTime>("RentalEnd");

                    b.Property<double>("TotalPrice");

                    b.HasKey("RentalId");

                    b.HasIndex("BikeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("RentalBikeSystem.Model.Rental", b =>
                {
                    b.HasOne("RentalBikeSystem.Model.Bike", "Bike")
                        .WithMany()
                        .HasForeignKey("BikeId");

                    b.HasOne("RentalBikeSystem.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
